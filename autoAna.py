#! /usr/bin/python
# -*- coding: utf-8 -*-
import re


def auto_extract_bwm(filename):
    """Automatically analyze TeX file, extract the weighted matching

    Note that, this function only supports extracting bipartite weighted
    matching (bwm) from the TeX file generated by auto_matching.py.
    """

    # regular expression pattern for extracting weight
    # Note that, currently we only support the cases
    # where the description of a node is on a single
    # line (similar for edge pattern)
    _WEIGHT = re.compile(r"\\node\[weight\]\s*\(W-(\d+)\)"
                         r"\s*at\s*\(.*\)\s*\{\$(\d+)\$\}", re.MULTILINE)
    _EDGE = re.compile(r"\\foreach\s*\\i/\\o\s*in\s*\{\s*(.+)\s*\}",
                       re.MULTILINE)

    matching = []
    weight = {}

    with open(filename, 'r') as fp:
        for line in fp:
            weight_g = re.match(_WEIGHT, line)
            if not (weight_g is None):
                ind, w = weight_g.groups()
                weight[int(ind) - 1] = int(w)
            else:
                edegs_g = re.match(_EDGE, line)
                if not (edegs_g is None):
                    edges = edegs_g.groups()[0]
                    edge = re.split(r"\s*,\s*", edges)
                    matching = [0] * len(edge)
                    for io in edge:
                        i, o = io.split('/')
                        try:
                            matching[int(i) - 1] = int(o) - 1
                        except IndexError as msg:
                            print("File analysis failed, cannot"
                                  "read matching because %s" % str(msg))

    return matching, weight


if __name__ == "__main__":
    matching, weight = auto_extract_bwm("./outputs/arrival_matching.tex")
    print matching
    print weight
